{"version":3,"sources":["utils/constant/index.js","component/header/index.js","component/footer/index.js","component/menu/index.js","container/root/index.js","utils/csv/index.js","container/maps/index.js","container/tools/color/index.js","container/tools/rule/index.js","index.js"],"names":["PageTable","maps","title","path","color","rule","Header","useContext","WorldContext","store","dispatch","scene","AppBar","Toolbar","IconButton","style","marginRight","onClick","type","Typography","variant","Footer","position","top","bottom","useStyles","makeStyles","theme","icon","justifyContent","item","Menu","styles","useCallback","Drawer","open","menu","className","Divider","List","ListSubheader","component","ListItem","button","Link","to","replace","ListItemIcon","ListItemText","primary","React","createContext","root","flexDirection","alignItems","width","textAlign","paddingTop","paddingBottom","container","display","initialState","reducer","state","action","payload","Root","children","useReducer","Provider","value","convertCsv","csvStr","csvArray","split","keys","map","index","data","array","i","length","filter","Boolean","fetchCsv","a","fetch","response","reader","body","getReader","read","result","decoder","TextDecoder","decode","csv","console","error","card","height","backgroundColor","version","fontSize","marginTop","marginBottom","info","description","chip","Map","memo","props","window","url","min","Grid","Chip","label","first","popular","bug","Card","CardContent","gutterBottom","junre","player","time","CardActions","Button","size","Maps","useState","SetMaps","useEffect","fetchData","MapCard","key","spacing","direction","field","margin","ColorTool","SetColor","intColor","parseInt","updateColor","hex","convertColor","event","num","target","toString","padStart","TextField","onChange","Paper","elevation","form","minWidth","copy","marginLeft","text","RuleTool","SetData","SetVersion","preset","SetPreset","other","SetOther","SetValue","textData","parseFloat","log","JSON","stringify","desc","note","note2","note1","def","default","code","join","convertMcFunctionText","FormControl","Select","e","MenuItem","FormControlLabel","control","Checkbox","checked","labelPlacement","InputProps","readOnly","multiline","fullWidth","App","exact","Rule","Color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec3935ff.chunk.js","sourcesContent":["export const PageTable = {\r\n  maps: { title: 'JE 配布マップ一覧', path: '/' },\r\n  color: { title: 'カラーツール', path: '/color' },\r\n  rule: { title: 'ルール一括設定', path: '/rule' },\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { WorldContext } from '../../container/root';\r\nimport { PageTable } from '../../utils/constant';\r\n\r\nconst Header = () => {\r\n  const { store, dispatch } = useContext(WorldContext);\r\n  const title = PageTable?.[store.scene]?.title ?? '';\r\n\r\n  return (\r\n    <AppBar>\r\n      <Toolbar>\r\n        <IconButton style={{ marginRight: 8 }} onClick={() => { dispatch({ type: 'menuToggle' }) }}>\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography style={{ marginRight: 16 }} variant=\"h6\" color=\"inherit\">Keiduki Minecraft Note</Typography>\r\n        <Typography variant=\"h6\" color=\"inherit\">{title}</Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { AppBar, Typography } from '@material-ui/core';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <AppBar position=\"fixed\" style={{ top: 'auto', bottom: 0 }}>\r\n      <Typography >{`Copyright © 2021 Keiduki`}</Typography>\r\n    </AppBar>\r\n  )\r\n};\r\n\r\nexport default Footer;","import React, { useContext, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Drawer, Divider, Typography, IconButton, List, ListSubheader, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\n\r\nimport { WorldContext } from '../../container/root';\r\nimport { PageTable } from '../../utils/constant';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  item: {\r\n    marginRight: 8,\r\n  },\r\n}));\r\n\r\nconst Menu = () => {\r\n  const styles = useStyles();\r\n  const { store, dispatch } = useContext(WorldContext);\r\n  \r\n  const onClick = useCallback(() => {\r\n    dispatch({ type: 'menuToggle' });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Drawer open={store.menu}>\r\n      <IconButton className={styles.icon} onClick={onClick}>\r\n        <Typography>Menu</Typography>\r\n        <ChevronLeftIcon />\r\n      </IconButton>\r\n      <Divider />\r\n      <List>\r\n        <ListSubheader component=\"div\">{'Information'}</ListSubheader>\r\n        <ListItem button component={Link} to={PageTable['maps'].path} replace onClick={onClick}>\r\n          <ListItemIcon>\r\n            <MapIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary={PageTable['maps'].title}/>\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListSubheader component=\"div\">{'Tools'}</ListSubheader>\r\n        <ListItem button component={Link} to={PageTable['rule'].path} replace onClick={onClick}>\r\n          <ListItemIcon>\r\n            <TuneIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary={PageTable['rule'].title} />\r\n        </ListItem>\r\n        <ListItem button component={Link} to={PageTable['color'].path} replace onClick={onClick}>\r\n          <ListItemIcon>\r\n            <ColorLensIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary={PageTable['color'].title} />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  )\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Header from '../../component/header';\nimport Footer from '../../component/footer';\nimport Menu from '../../component/menu';\n\n\nexport const WorldContext = React.createContext();\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '95%',\n    textAlign: 'center',\n    paddingTop: 100,\n    paddingBottom: 50,\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nconst initialState = {\n  menu: false,\n  scene: '',\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'menuToggle':\n      return { ...state, menu: !state.menu };\n    case 'scene':\n      return { ...state, scene: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Root = ({ children }) => {\n  const styles = useStyles();\n  const [store, dispatch] = useReducer(reducer, initialState);\n  return (\n    <WorldContext.Provider value={{ store, dispatch }}>\n      <div className={styles.root}>\n        <Header />\n        <Menu />\n        <div className={styles.container}>\n          {children}\n        </div>\n        <Footer />\n      </div>\n    </WorldContext.Provider>\n  );\n}\n\nexport default Root;\n","export const convertCsv = (csvStr) => {\r\n  const csvArray = csvStr.split('\\n');\r\n  const keys = csvArray[0].split(',');\r\n  const values = csvArray.map((value, index) => {\r\n    if (index === 0 ) return false;\r\n    const data = {};\r\n    const array = value.split(',');\r\n    for (let i = 0; i < array.length; ++i) {\r\n      data[keys[i]] = array[i];\r\n    }\r\n    return data;\r\n  }).filter(Boolean);\r\n\r\n  return values;\r\n};\r\n\r\nexport const fetchCsv = async (path) => {\r\n  let data = [];\r\n  try {\r\n    const response = await fetch(path);\r\n    const reader = response.body.getReader();\r\n    const result = await reader.read();\r\n    const decoder = new TextDecoder('utf-8');\r\n    const csv = await decoder.decode(result.value);\r\n    data = convertCsv(csv);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n  return data;\r\n};\r\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\r\nimport { Grid, Chip, Card, CardContent, CardActions, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { fetchCsv } from '../../utils/csv';\r\nimport { WorldContext } from '../root';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: 300,\r\n    height: 200,\r\n    backgroundColor: '#ccddff',\r\n  },\r\n  version: {\r\n    fontSize: 14,\r\n  },\r\n  title: {\r\n    marginTop: 4,\r\n    marginBottom: 8,\r\n    fontSize: 22,\r\n  },\r\n  info: {\r\n    fontSize: 14,\r\n    textAlign: 'left',\r\n  },\r\n  description: {\r\n    marginTop: 8,\r\n    textAlign: 'left',\r\n  },\r\n  chip: {\r\n    marginRight: 4,\r\n  },\r\n});\r\n\r\nconst Map = React.memo((props) => {\r\n  const open = useCallback(() => {\r\n    window.open(props.url);\r\n  }, [props.url]);\r\n\r\n  const version = props.min?.length > 0 ? `${props.min} ～ ${props.version}` : props.version;\r\n\r\n  return (\r\n    <Grid item>\r\n      <Chip className={props.styles.chip} label={`バージョン: ${version}`} color=\"primary\" />\r\n      {props?.first === '1' && <Chip className={props.styles.chip} label={'初心者向け'} color=\"secondary\" />}\r\n      {props?.popular === '1' && <Chip className={props.styles.chip} label={'大人気企画'} color=\"secondary\" />}\r\n      {props?.bug === '1' && <Chip className={props.styles.chip} label={'バグ多め'} />}\r\n      <Card >\r\n        <CardContent className={props.styles.card} >\r\n          <Typography className={props.styles.title}>{props.title}</Typography>\r\n          <Typography className={props.styles.info} color=\"textSecondary\" gutterBottom>{'- ジャンル: ' + props.junre}</Typography>\r\n          <Typography className={props.styles.info} color=\"textSecondary\" gutterBottom>{'- プレイ人数: ' + props.player}</Typography>\r\n          <Typography className={props.styles.info} color=\"textSecondary\" gutterBottom>{'- 推定プレイ時間: ' + props.time}</Typography>\r\n          <Typography className={props.styles.description}>{props.description}</Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"small\" color=\"primary\" onClick={open}>\r\n            別サイトでダウンロード\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n});\r\n\r\nconst Maps = () => {\r\n  const styles = useStyles();\r\n  const { dispatch } = useContext(WorldContext);\r\n  const [maps, SetMaps] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'scene', payload: 'maps' });\r\n\r\n    const fetchData = (async () => {\r\n      const data = await fetchCsv('/world/assets/maps.csv');\r\n      SetMaps(data);\r\n    });\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  const MapCard = maps.map((value, index) => <Map {...value} key={`map${index}`} styles={styles} />);\r\n  return (\r\n    <Grid container spacing={2} direction=\"row\" justifyContent=\"center\" alignItems=\"center\" >\r\n      {MapCard}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Maps;\r\n","import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport { Paper, Typography, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { WorldContext } from '../../root';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  field: {\r\n    margin: 16,\r\n  },\r\n});\r\n\r\nconst ColorTool = () => {\r\n  const style = useStyles();\r\n  const { dispatch } = useContext(WorldContext);\r\n  const [color, SetColor] = useState('#FFFFFF');\r\n  const intColor = parseInt(color.replace('#', ''), 16);\r\n  \r\n  useEffect(() => {\r\n    dispatch({ type: 'scene', payload: 'color' });\r\n  }, [dispatch]);\r\n\r\n  const updateColor = useCallback((color) => {\r\n    SetColor(color.hex);\r\n  }, []);\r\n\r\n  const convertColor = useCallback((event) => {\r\n    const num = parseInt(event.target.value, 10);\r\n    const colorNum = 0 <= num && num <= 0xffffff ? num : 0;\r\n    SetColor('#' + colorNum.toString(16).padStart(6, '0'));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" color=\"textSecondary\">{'バイオームの色に変換してくれるやつ(適当版)'}</Typography>\r\n      <TextField className={style.field} label=\"Biome Color\" variant=\"filled\" value={intColor} onChange={convertColor} />\r\n      <div className={style.root}>\r\n        <SketchPicker color={color} onChange={updateColor} />\r\n        <Paper elevation={3} style={{ margin: 8, width: 256, height: 256, backgroundColor: color }}/>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default ColorTool;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { FormControl, FormControlLabel, Checkbox, Select, MenuItem, Button, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nimport { fetchCsv } from '../../../utils/csv';\r\nimport { WorldContext } from '../../root';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  top: {\r\n    flexDirection: 'row',\r\n  },\r\n  form: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  copy: {\r\n    marginLeft: 36,\r\n    minWidth: 120,\r\n  },\r\n  field: {\r\n    margin: 16,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  text: {\r\n    color: '#657b83',\r\n  },\r\n}));\r\n\r\nconst convertMcFunctionText = (data, version, preset, other) => {\r\n  const textData = data\r\n    .filter(item => parseFloat(item.version) <= version)\r\n    .filter(item => other ? true : item.type === 'gamerule')\r\n    .map(item => {\r\n      console.log(`${JSON.stringify(item)}`);\r\n      const title = `## ${item.desc}`;\r\n      const note = (() => {\r\n        if (item.note2) return `# ${item.note1}\\n# ${item.note2}`;\r\n        if (item.note1) return `# ${item.note1}`;\r\n        return null;\r\n      })();\r\n      const def = `# 初期値: ${item.default}`;\r\n      const code = item.type === 'gamerule' ? `gamerule ${item.key} ${item[preset]}` : `# ${item.key} ${item[preset]}`;\r\n\r\n      if (note) {\r\n        return `${title}\\n${note}\\n${def}\\n${code}`;\r\n      }\r\n      return `${title}\\n${def}\\n${code}`;\r\n    });\r\n\r\n  return `## ルール一括設定\\n\\n${textData.join(`\\n\\n`)}`;\r\n};\r\n\r\nconst RuleTool = () => {\r\n  const style = useStyles();\r\n  const [data, SetData] = useState([]);\r\n  const [version, SetVersion] = useState(1.18);\r\n  const [preset, SetPreset] = useState('preset-world');\r\n  const [other, SetOther] = useState(true);\r\n  const [value, SetValue] = useState('');\r\n  const { dispatch } = useContext(WorldContext);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'scene', payload: 'rule' });\r\n\r\n    const fetchData = (async () => {\r\n      const data = await fetchCsv('/world/assets/rules.csv');\r\n      SetData(data);\r\n    });\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    SetValue(convertMcFunctionText(data, version, preset, other));\r\n  }, [data, version, preset, other]);\r\n\r\n  return (\r\n    <>\r\n      <div className={style.top}>\r\n        <FormControl className={style.form}>\r\n          <Select value={version} onChange={e => SetVersion(e.target.value)}>\r\n            <MenuItem value={1.12}>ver 1.12</MenuItem>\r\n            <MenuItem value={1.13}>ver 1.13</MenuItem>\r\n            <MenuItem value={1.14}>ver 1.14</MenuItem>\r\n            <MenuItem value={1.15}>ver 1.15</MenuItem>\r\n            <MenuItem value={1.16}>ver 1.16</MenuItem>\r\n            <MenuItem value={1.17}>ver 1.17</MenuItem>\r\n            <MenuItem value={1.18}>ver 1.18</MenuItem>\r\n            <MenuItem value={1.19}>ver 1.19</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={style.form}>\r\n          <Select value={preset} onChange={e => SetPreset(e.target.value)}>\r\n            <MenuItem value=\"default\">デフォルト値</MenuItem>\r\n            <MenuItem value=\"preset-world\">マップ作成用</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={other}\r\n              onChange={(e) => SetOther(e.target.checked)}\r\n            />\r\n          }\r\n          label=\"gamerule以外も追加\"\r\n          labelPlacement=\"start\"\r\n        />\r\n        <FormControl className={style.copy}>\r\n          <CopyToClipboard text={value}>\r\n            <Button variant=\"contained\">コピー</Button>\r\n          </CopyToClipboard>\r\n        </FormControl>\r\n      </div>\r\n      <TextField\r\n        className={style.field}\r\n        variant=\"outlined\"\r\n        value={value}\r\n        InputProps={{ \r\n          readOnly: true,\r\n          className: style.text,\r\n         }}\r\n        multiline\r\n        fullWidth\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RuleTool;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './style.css';\n\nimport Root from './container/root';\nimport Maps from './container/maps';\nimport Color from './container/tools/color';\nimport Rule from './container/tools/rule';\n\nimport { PageTable } from './utils/constant';\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Root>\n        <Switch>\n          <Route exact path={PageTable['maps'].path} component={Maps} />\n          <Route exact path={PageTable['rule'].path} component={Rule} />\n          <Route exact path={PageTable['color'].path} component={Color} />\n        </Switch>\n      </Root>\n    </HashRouter>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>  \n    <div className=\"App\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('app')\n);"],"sourceRoot":""}