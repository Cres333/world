{"version":3,"sources":["component/header/index.js","component/menu/index.js","container/root/index.js","container/top/index.js","container/maps/index.js","container/color/index.js","index.js"],"names":["Header","useContext","WorldContext","store","dispatch","AppBar","Toolbar","IconButton","style","marginRight","onClick","type","Typography","variant","color","title","Menu","useCallback","Drawer","open","menu","List","ListItem","button","component","Link","to","ListItemText","primary","React","createContext","initialState","reducer","state","action","payload","Root","children","useReducer","Provider","value","Top","Maps","useEffect","useStyles","makeStyles","root","margin","ColorTool","useState","SetColor","intColor","parseInt","replace","updateColor","hex","convertColor","event","num","target","toString","padStart","onChange","TextField","className","label","App","exact","path","Color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f02cd8fc.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { WorldContext } from '../../container/root';\r\n\r\nconst Header = () => {\r\n  const { store, dispatch } = useContext(WorldContext);\r\n  return (\r\n    <AppBar>\r\n      <Toolbar>\r\n        <IconButton style={{ marginRight: 8 }} onClick={() => { dispatch({ type: 'menuToggle' }) }}>\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography style={{ marginRight: 16 }} variant=\"h6\" color=\"inherit\">Keiduki Minecraft World</Typography>\r\n        <Typography variant=\"h6\" color=\"inherit\">{store.title}</Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n};\r\n\r\nexport default Header;","import React, { useContext, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Drawer, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\n\r\nimport { WorldContext } from '../../container/root';\r\n\r\nconst Menu = () => {\r\n  const { store, dispatch } = useContext(WorldContext);\r\n  \r\n  const onClick = useCallback(() => {\r\n    dispatch({ type: 'menuToggle' });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Drawer open={store.menu}>\r\n      <List>\r\n        <ListItem button component={Link} to=\"/world/maps\" onClick={onClick}>\r\n          <MapIcon style={{ marginRight: 8 }} />\r\n          <ListItemText primary=\"配布マップ一覧\"/>\r\n        </ListItem>\r\n      </List>\r\n      <List>\r\n        <ListItem button component={Link} to=\"/world/color\" onClick={onClick}>\r\n          <ColorLensIcon style={{ marginRight: 8 }} />\r\n          <ListItemText primary=\"カラーツール\"/>\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  )\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useReducer } from 'react';\n\nimport Header from '../../component/header';\nimport Menu from '../../component/menu';\n\nexport const WorldContext = React.createContext();\n\nconst initialState = {\n  menu: false,\n  title: '',\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'menuToggle':\n      return { ...state, menu: !state.menu };\n    case 'scene':\n      return { ...state, title: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst Root = ({ children }) => {\n  const [store, dispatch] = useReducer(reducer, initialState);\n  return (\n    <WorldContext.Provider value={{ store, dispatch }}>\n      <Header />\n      <Menu />\n      {children}\n    </WorldContext.Provider>\n  );\n}\n\nexport default Root;\n","import React from 'react';\r\n\r\nconst Top = () => {\r\n  return (\r\n    <p>左上のメニューアイコンから選択</p>\r\n  )\r\n};\r\n\r\nexport default Top;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { WorldContext } from '../root';\r\n\r\nconst Maps = () => {\r\n  const { dispatch } = useContext(WorldContext);\r\n  \r\n  useEffect(() => {\r\n    dispatch({ type: 'scene', payload: '配布マップ一覧' });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <p>開発中</p>\r\n  )\r\n};\r\n\r\nexport default Maps;\r\n","import React, { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport { TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { WorldContext } from '../root';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: 16,\r\n  },\r\n});\r\n\r\nconst ColorTool = () => {\r\n  const style = useStyles();\r\n  const { dispatch } = useContext(WorldContext);\r\n  const [color, SetColor] = useState('#FFFFFF');\r\n  const intColor = parseInt(color.replace('#', ''), 16);\r\n  \r\n  useEffect(() => {\r\n    dispatch({ type: 'scene', payload: 'カラーツール' });\r\n  }, [dispatch]);\r\n\r\n  const updateColor = useCallback((color) => {\r\n    SetColor(color.hex);\r\n  }, []);\r\n\r\n  const convertColor = useCallback((event) => {\r\n    const num = parseInt(event.target.value, 10);\r\n    const colorNum = 0 <= num && num <= 0xffffff ? num : 0;\r\n    SetColor('#' + colorNum.toString(16).padStart(6, '0'));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SketchPicker color={color} onChange={updateColor} />\r\n      <TextField className={style.root} label=\"Biome Color\" variant=\"filled\" value={intColor} onChange={convertColor} />\r\n    </>\r\n  )\r\n};\r\n\r\nexport default ColorTool;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './style.css';\n\nimport Root from './container/root';\nimport Top from './container/top';\nimport Maps from './container/maps';\nimport Color from './container/color';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Root>\n        <Switch>\n          <Route exact path=\"/world/\" component={Top} />\n          <Route exact path=\"/world/maps\" component={Maps} />\n          <Route exact path=\"/world/color\" component={Color} />\n        </Switch>\n      </Root>\n    </BrowserRouter>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>  \n    <div className=\"App\">\n      <header className=\"App-header\">\n        <App />\n      </header>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('app')\n);"],"sourceRoot":""}